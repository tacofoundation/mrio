import{_ as a,c as i,a2 as e,o as t}from"./chunks/framework.9hYZJcoh.js";const c=JSON.parse('{"title":"Attributes","description":"","frontmatter":{},"headers":[],"relativePath":"en/python/attributes.md","filePath":"en/python/attributes.md"}'),n={name:"en/python/attributes.md"};function h(l,s,p,o,r,d){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">​</a></h1><p>This section outlines the attributes associated with the <a href="https://github.com/tacofoundation/mrio-python/blob/708ce05b5cebbf38c2114399ed54c5b4b5769443/mrio/readers.py#L36" target="_blank" rel="noreferrer">DatasetReader</a> class. In addition to the standard attributes provided by the <a href="https://rasterio.readthedocs.io/en/stable/topics/reading.html" target="_blank" rel="noreferrer">rasterio</a> library, we introduce extended attributes for compatibility with <a href="https://docs.xarray.dev/en/latest/generated/xarray.DataArray.html#xarray.DataArray" target="_blank" rel="noreferrer">xarray</a> objects.</p><h2 id="attributes-from-cog-standard" tabindex="-1">Attributes from COG standard <a class="header-anchor" href="#attributes-from-cog-standard" aria-label="Permalink to &quot;Attributes from COG standard&quot;">​</a></h2><h3 id="block-shapes" tabindex="-1">block_shapes <a class="header-anchor" href="#block-shapes" aria-label="Permalink to &quot;block_shapes&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The <code>block_shapes</code> in mrio is different from the <code>block_shapes</code> in rasterio.</p></div><p>The <code>block_shapes</code> in rasterio returns a List of tuples of the block shapes for each band in the dataset. In mrio, we return just a tuple because, in multi-dimensional COG files, the block shapes are the same for all bands in the dataset. We keep the same name for consistency with the rasterio library.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).block_shapes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; (256, 256)</span></span></code></pre></div><h3 id="bounds" tabindex="-1">bounds <a class="header-anchor" href="#bounds" aria-label="Permalink to &quot;bounds&quot;">​</a></h3><p>Returns the lower left and upper right bounds of the dataset in the units of its coordinate reference system. The returned values is a <a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" target="_blank" rel="noreferrer">namedtuple</a> with the following fields: <code>left</code>, <code>bottom</code>, <code>right</code>, <code>top</code>.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).bounds</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; BoundingBox(left=0.0, bottom=0.0, right=1000.0, top=1000.0)</span></span></code></pre></div><h3 id="compression" tabindex="-1">compression <a class="header-anchor" href="#compression" aria-label="Permalink to &quot;compression&quot;">​</a></h3><p>The compression method used for the dataset. The returned value is a enum of type <code>Compression</code>. The possible values are: <code>jpeg</code>, <code>lzw</code>, <code>packbits</code>, <code>deflate</code>, <code>ccittrle</code>, <code>ccittfax3</code>, <code>ccittfax4</code>, <code>lzma</code>, <code>none</code>, <code>zstd</code>, <code>lerc</code>, <code>lerc_deflate</code>, <code>lerc_zstd</code>, <code>webp</code>, <code>jpeg2000</code>. Check the <a href="https://rasterio.readthedocs.io/en/latest/api/rasterio.enums.html#rasterio.enums.Compression" target="_blank" rel="noreferrer">rasterio compression documentation</a> for more information.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).compression.name</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; &#39;deflate&#39;</span></span></code></pre></div><h3 id="count" tabindex="-1">count <a class="header-anchor" href="#count" aria-label="Permalink to &quot;count&quot;">​</a></h3><p>The number of raster bands in the dataset. The returned value is an integer.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).count</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; 120</span></span></code></pre></div><h3 id="crs" tabindex="-1">crs <a class="header-anchor" href="#crs" aria-label="Permalink to &quot;crs&quot;">​</a></h3><p>The dataset’s coordinate reference system. In setting this property, the value may be a CRS object or an EPSG:nnnn or WKT string. The returned value is a <a href="https://rasterio.readthedocs.io/en/latest/api/rasterio.crs.html#rasterio.crs.CRS" target="_blank" rel="noreferrer">CRS</a> object. To get the EPSG code, use the <code>to_epsg()</code> method.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).crs.to_epsg()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; 4326</span></span></code></pre></div><h3 id="descriptions" tabindex="-1">descriptions <a class="header-anchor" href="#descriptions" aria-label="Permalink to &quot;descriptions&quot;">​</a></h3><p>The descriptions for each dataset band. This fields is always present in multi-dimensional COG files. The returned value is a list of strings.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).descriptions</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; [&#39;band1__time1&#39;, __&#39;band1__time2&#39;, &#39;band2__time1&#39;, &#39;band2__time2&#39;]</span></span></code></pre></div><h3 id="driver" tabindex="-1">driver <a class="header-anchor" href="#driver" aria-label="Permalink to &quot;driver&quot;">​</a></h3><p>The name of the driver used to open the dataset. mrio only supports the <code>GTiff</code> driver. The returned value is a string.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).driver</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; &#39;GTiff&#39;</span></span></code></pre></div><h3 id="dtypes" tabindex="-1">dtypes <a class="header-anchor" href="#dtypes" aria-label="Permalink to &quot;dtypes&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The <code>dtypes</code> in mrio is different from the <code>dtypes</code> in rasterio.</p></div><p>The <code>dtypes</code> in rasterio returns a List of strings of the data types for each band in the dataset. In mrio, we return just a string because in multi-dimensional COG files, the data types are the same for all bands in the dataset. We keep the same name for consistency with the rasterio library.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).dtypes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; &#39;float32&#39;</span></span></code></pre></div><h3 id="gcps" tabindex="-1">gcps <a class="header-anchor" href="#gcps" aria-label="Permalink to &quot;gcps&quot;">​</a></h3><p>Ground control points and their coordinate reference system. The returned value is a 2-tuple, or pair: (gcps, crs).</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).gcps</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; ([], None)</span></span></code></pre></div><h3 id="height" tabindex="-1">height <a class="header-anchor" href="#height" aria-label="Permalink to &quot;height&quot;">​</a></h3><p>The height of the dataset in pixels. The returned value is an integer.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).height</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; 1000</span></span></code></pre></div><h3 id="height-1" tabindex="-1">height <a class="header-anchor" href="#height-1" aria-label="Permalink to &quot;height&quot;">​</a></h3><p>The width of the dataset in pixels. The returned value is an integer.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).width</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; 1000</span></span></code></pre></div><h3 id="indexes" tabindex="-1">indexes <a class="header-anchor" href="#indexes" aria-label="Permalink to &quot;indexes&quot;">​</a></h3><p>The indexes of the dataset bands. The returned value is a list of integers.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).indexes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></span></code></pre></div><h3 id="interleaving" tabindex="-1">interleaving <a class="header-anchor" href="#interleaving" aria-label="Permalink to &quot;interleaving&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>from GDAL 3.11 also supports <code>tile</code> mode.</p></div><p>The interleaving of the dataset. The returned value is an enum of type <code>Interleaving</code>. The possible values are: <code>band</code>, <code>pixel</code>, <code>line</code>. Check the <a href="https://rasterio.readthedocs.io/en/latest/api/rasterio.enums.html#rasterio.enums.Interleaving" target="_blank" rel="noreferrer">rasterio interleaving documentation</a> for more information.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).interleave.name</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; &#39;band&#39;</span></span></code></pre></div><h3 id="is-tiled" tabindex="-1">is_tiled <a class="header-anchor" href="#is-tiled" aria-label="Permalink to &quot;is_tiled&quot;">​</a></h3><p>Whether the dataset is tiled. The returned value is a boolean.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).is_tiled</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; True</span></span></code></pre></div><h3 id="mask-flag-enums" tabindex="-1">mask_flag_enums <a class="header-anchor" href="#mask-flag-enums" aria-label="Permalink to &quot;mask_flag_enums&quot;">​</a></h3><p>Sets of flags describing the sources of band masks. The possible values are: <code>all_valid</code>, <code>per_dataset</code>, <code>alpha</code>, <code>nodata</code>. The returned value is a list of enums of type <code>MaskFlags</code>. Check the <a href="https://rasterio.readthedocs.io/en/latest/api/rasterio.enums.html#rasterio.enums.MaskFlags" target="_blank" rel="noreferrer">rasterio mask flags documentation</a> for more information.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).mask_flag_enums[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].name</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; &#39;all_valid&#39;</span></span></code></pre></div><h3 id="meta" tabindex="-1">meta <a class="header-anchor" href="#meta" aria-label="Permalink to &quot;meta&quot;">​</a></h3><p>The rasterio basic metadata. The returned value is a dictionary.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).meta</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; {&#39;driver&#39;: &#39;GTiff&#39;, &#39;dtype&#39;: &#39;float32&#39;, &#39;nodata&#39;: None, &#39;width&#39;: 1000, &#39;height&#39;: 1000, &#39;count&#39;: 120, &#39;crs&#39;: CRS.from_epsg(4326), &#39;transform&#39;: Affine(1.0, 0.0, 0.0, 0.0, -1.0, 1000.0)}</span></span></code></pre></div><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><p>The name of the file. The returned value is a string.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).name</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; &#39;example.tif&#39;</span></span></code></pre></div><h3 id="nodata" tabindex="-1">nodata <a class="header-anchor" href="#nodata" aria-label="Permalink to &quot;nodata&quot;">​</a></h3><p>The nodata value for the dataset. The returned value is a float.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).nodata</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; None</span></span></code></pre></div><h3 id="nodatavals" tabindex="-1">nodatavals <a class="header-anchor" href="#nodatavals" aria-label="Permalink to &quot;nodatavals&quot;">​</a></h3><p>The nodata values for each band in the dataset. The returned value is a tuple of nodata values.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).nodatavals</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; (None, None, None, None, None, None, None, None, None, None)</span></span></code></pre></div><h3 id="offsets" tabindex="-1">offsets <a class="header-anchor" href="#offsets" aria-label="Permalink to &quot;offsets&quot;">​</a></h3><p>The offsets values for each band in the dataset. Do not confuse with the byte offsets. The returned value is a tuple of offsets.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).offsets</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; (0, 0, 0, 0, 0, 0, 0, 0, 0, 0)</span></span></code></pre></div><h3 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h3><p>A dictionary with the aditional parameters used to open the dataset. The returned value is a dictionary.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).options</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; {&#39;engine&#39;: &#39;xarray&#39;}</span></span></code></pre></div><h3 id="photometric" tabindex="-1">photometric <a class="header-anchor" href="#photometric" aria-label="Permalink to &quot;photometric&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>In multi-dimensional COG files, all dimensions are merged into the band space. Therefore, the photometric interpretation must always remain unspecified.</p></div><p>The photometric interpretation of the dataset. The returned value is a enum of type <code>Photometric</code>. The possible values are: None, <code>black</code>, <code>cielab</code>, <code>cmyk</code>, <code>icclab</code>, <code>itulab</code>, <code>rgb</code>, <code>white</code>, <code>ycbcr</code>. Check the <a href="https://rasterio.readthedocs.io/en/latest/api/rasterio.enums.html#rasterio.enums.PhotometricInterp" target="_blank" rel="noreferrer">rasterio photometric documentation</a> for more information.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).photometric.name</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; None</span></span></code></pre></div><h3 id="profile" tabindex="-1">profile <a class="header-anchor" href="#profile" aria-label="Permalink to &quot;profile&quot;">​</a></h3><p>The rasterio basic metadata and creation COG options. The returned value is a dictionary. Contrary to the <code>meta</code> attribute, the <code>profile</code> attribute includes the parameters used to create the COG file.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).profile</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; {&#39;driver&#39;: &#39;GTiff&#39;, &#39;dtype&#39;: &#39;float32&#39;, &#39;nodata&#39;: None, &#39;width&#39;: 1000, &#39;height&#39;: 1000, &#39;count&#39;: 120, &#39;crs&#39;: CRS.from_epsg(4326), &#39;transform&#39;: Affine(1.0, 0.0, 0.0, 0.0, -1.0, 1000.0), &#39;blockxsize&#39;: 256, &#39;blockysize&#39;: 256, &#39;compress&#39;: &#39;deflate&#39;, &#39;interleave&#39;: &#39;band&#39;, &#39;tiled&#39;: True}</span></span></code></pre></div><h3 id="res" tabindex="-1">res <a class="header-anchor" href="#res" aria-label="Permalink to &quot;res&quot;">​</a></h3><p>The resolution of the dataset. The returned value is a tuple of floats.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).res</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; (1.0, 1.0)</span></span></code></pre></div><h3 id="rpcs" tabindex="-1">rpcs <a class="header-anchor" href="#rpcs" aria-label="Permalink to &quot;rpcs&quot;">​</a></h3><p>Rational polynomial coefficients mapping between pixel and geodetic coordinates. The returned value is a dict-like object. If the dataset does not have RPCs, the returned value is <code>None</code>.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).rpcs</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; None</span></span></code></pre></div><h3 id="scales" tabindex="-1">scales <a class="header-anchor" href="#scales" aria-label="Permalink to &quot;scales&quot;">​</a></h3><p>The scales values for each band in the dataset. The returned value is a tuple of scales.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).scales</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; (1.0, 1.0, 1.0)</span></span></code></pre></div><h3 id="subdatasets" tabindex="-1">subdatasets <a class="header-anchor" href="#subdatasets" aria-label="Permalink to &quot;subdatasets&quot;">​</a></h3><p>The subdatasets of the dataset.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).subdatasets</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; []</span></span></code></pre></div><h3 id="transform" tabindex="-1">transform <a class="header-anchor" href="#transform" aria-label="Permalink to &quot;transform&quot;">​</a></h3><p>The affine transformation matrix for the dataset. The returned value is an <a href="https://rasterio.readthedocs.io/en/latest/api/rasterio.transform.html#rasterio.transform.Affine" target="_blank" rel="noreferrer">Affine</a> object.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).transform</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; Affine(1.0, 0.0, 0.0, 0.0, -1.0, 1000.0)</span></span></code></pre></div><h3 id="units" tabindex="-1">units <a class="header-anchor" href="#units" aria-label="Permalink to &quot;units&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The <code>units</code> in mrio is different from the <code>units</code> in rasterio.</p></div><p>The units of the dataset. In mrio, we return just a string because in multi-dimensional COG files, the units are the same for all bands in the dataset. We keep the same name for consistency with the rasterio library.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).units</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; &#39;m&#39;</span></span></code></pre></div><h3 id="width" tabindex="-1">width <a class="header-anchor" href="#width" aria-label="Permalink to &quot;width&quot;">​</a></h3><p>The width of the dataset in pixels. The returned value is an integer.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).width</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; 1000</span></span></code></pre></div><h2 id="extended-attributes" tabindex="-1">Extended attributes <a class="header-anchor" href="#extended-attributes" aria-label="Permalink to &quot;Extended attributes&quot;">​</a></h2><h2 id="shape" tabindex="-1">shape <a class="header-anchor" href="#shape" aria-label="Permalink to &quot;shape&quot;">​</a></h2><p>The shape of the multi-dimensional COG file. The returned value is a tuple of integers.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).shape</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; (4, 10, 13, 1024, 1024)</span></span></code></pre></div><h2 id="mode" tabindex="-1">mode <a class="header-anchor" href="#mode" aria-label="Permalink to &quot;mode&quot;">​</a></h2><p>The mode of the multi-dimensional COG file. Only two modes are supported: &#39;r&#39; for read and &#39;w&#39; for write. The returned value is a string.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).mode</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; &#39;r&#39;</span></span></code></pre></div><h2 id="attrs" tabindex="-1">attrs <a class="header-anchor" href="#attrs" aria-label="Permalink to &quot;attrs&quot;">​</a></h2><p>Dictionary storing arbitrary metadata with this array.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).attrs</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; {&#39;title&#39;: &#39;Sentinel-2 L2A&#39;, &#39;version&#39;: &#39;1.0.0&#39;, &#39;date&#39;: &#39;2022-01-01&#39;}</span></span></code></pre></div><h2 id="chunks" tabindex="-1">chunks <a class="header-anchor" href="#chunks" aria-label="Permalink to &quot;chunks&quot;">​</a></h2><p>The chunk size of the multi-dimensional COG file.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).chunks</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; (1, 1, 1, 128, 128)</span></span></code></pre></div><h2 id="coords" tabindex="-1">coords <a class="header-anchor" href="#coords" aria-label="Permalink to &quot;coords&quot;">​</a></h2><p>Dictionary of coordinate arrays. The keys are the names of the dimensions and the values are the coordinate arrays.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).coords</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; {&#39;time&#39;: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), &#39;y&#39;: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), &#39;x&#39;: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])}</span></span></code></pre></div><h2 id="dtype" tabindex="-1">dtype <a class="header-anchor" href="#dtype" aria-label="Permalink to &quot;dtype&quot;">​</a></h2><p>The data type of the multi-dimensional COG file. The returned value is a string.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).dtype</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; &#39;float32&#39;</span></span></code></pre></div><h2 id="ndim" tabindex="-1">ndim <a class="header-anchor" href="#ndim" aria-label="Permalink to &quot;ndim&quot;">​</a></h2><p>The number of dimensions of the multi-dimensional COG file. The returned value is an integer.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).ndim</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; 5</span></span></code></pre></div><h2 id="size" tabindex="-1">size <a class="header-anchor" href="#size" aria-label="Permalink to &quot;size&quot;">​</a></h2><p>The size in bytes of the multi-dimensional COG file. The returned value is an integer.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.read(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).size</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;&gt;&gt; 4294967296</span></span></code></pre></div>`,123)]))}const g=a(n,[["render",h]]);export{c as __pageData,g as default};
