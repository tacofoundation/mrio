import{_ as s,c as a,a2 as t,o as e}from"./chunks/framework.9hYZJcoh.js";const c=JSON.parse('{"title":"Validation","description":"","frontmatter":{},"headers":[],"relativePath":"en/python/validation.md","filePath":"en/python/validation.md"}'),n={name:"en/python/validation.md"};function o(l,i,r,h,p,d){return e(),a("div",null,i[0]||(i[0]=[t(`<h1 id="validation" tabindex="-1">Validation <a class="header-anchor" href="#validation" aria-label="Permalink to &quot;Validation&quot;">​</a></h1><p>The <code>mrio</code> library provides functions to validate whether a file is an <a href="https://www.google.com/" target="_blank" rel="noreferrer"><strong>mGeoTIFF</strong></a> or a <a href="https://www.google.com/" target="_blank" rel="noreferrer"><strong>tGeoTIFF</strong></a>, ensuring adherence to their respective metadata specifications.</p><h2 id="mrio-is-mgeotiff" tabindex="-1"><code>mrio.is_mgeotiff</code> <a class="header-anchor" href="#mrio-is-mgeotiff" aria-label="Permalink to &quot;\`mrio.is_mgeotiff\`&quot;">​</a></h2><p>Determines if a file is a valid <strong>Multi-dimensional GeoTIFF (mGeoTIFF)</strong>. A valid mGeoTIFF must include <code>md:pattern</code> and <code>md:coordinates</code> in its metadata. Check the <a href="https://www.google.com/" target="_blank" rel="noreferrer">mGeoTIFF specification</a> for more details.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mrio.is_mgeotiff(path: PathLike, strict: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> bool</span></span></code></pre></div><p><strong>Parameters:</strong></p><ul><li><code>path</code>: The file path or name of the GeoTIFF file to validate</li><li><code>strict</code>: If True, raises detailed exceptions for validation failures.</li></ul><p><strong>Returns:</strong></p><p><code>True</code>: if the file is a mGeoTIFF; <code>False</code> otherwise.</p><p><strong>Example:</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio.is_mgeotiff(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># True if it&#39;s an mGeoTIFF</span></span></code></pre></div><h2 id="mrio-is-tgeotiff" tabindex="-1"><code>mrio.is_tgeotiff</code> <a class="header-anchor" href="#mrio-is-tgeotiff" aria-label="Permalink to &quot;\`mrio.is_tgeotiff\`&quot;">​</a></h2><p>Determines if a file is a valid <strong>Temporal GeoTIFF (tGeoTIFF)</strong>. Valid tGeoTIFFs must conform to strict <code>md:pattern</code> rules and include both mGeoTIFF fields and temporal attributes. Check the <a href="https://www.google.com/" target="_blank" rel="noreferrer">tGeoTIFF specification</a> for more details.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_tgeotiff(path: PathLike, strict: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div><p><strong>Parameters:</strong></p><ul><li><code>path</code>: The path or name of the TIFF file.</li><li><code>strict</code>: If True, raise exceptions for validation failures</li></ul><p><strong>Returns:</strong></p><p><code>True</code>: if the file is a tGeoTIFF; <code>False</code> otherwise.</p><p><strong>Example:</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mrio.is_tgeotiff(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;temporal_stack.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># True if it&#39;s a tGeoTIFF</span></span></code></pre></div>`,20)]))}const g=s(n,[["render",o]]);export{c as __pageData,g as default};
